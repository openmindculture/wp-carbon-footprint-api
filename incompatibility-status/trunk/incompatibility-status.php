<?php
/**
 * @package	incompatibility-status
 * @author	Ingo Steinke
 * @version 1.3.4
 *
 * @wordpress-plugin
 * Plugin Name: Incompatibility Status
 * Text Domain: incompatibility-status
 * Domain Path: /languages
 * Plugin URI: https://github.com/openmindculture/wp-incompatibility-status/
 * Description: Incompatibility Status adds a status message to the admin dashboard to display possible incompatibility issues using the block editor and full-site editing.
 * Short Description: Show Gutenberg Incompatibility Status in WP-Admin
 * Version: 1.3.4
 *  Author: openmindculture
 * Author URI: https://wordpress.org/support/users/openmindculture/
 * Requires at least: 6.0
 * Tested up to: 6.7
 * Requires PHP: 7.4
 */

if (is_admin()) {

	function openmindculture_wpstatusDashboardWidgets()
	{
		wp_add_dashboard_widget('custom_help_widget', 'Compatibility Status', 'openmindculture_wpstatusContent');
		add_action( 'admin_enqueue_scripts', 'openmindculture_wpstatusEnqueueAdminStyles' );
	}

	function openmindculture_wpstatusEnqueueAdminStyles()
	{
		wp_enqueue_style('openmindculture_wpstatusAdminStylesFile', plugin_dir_url(__FILE__).'styles.css');
	}

	function openmindculture_wpstatusContent()
	{
		$details = [];
		$warnings = [];
		$hasClassicEditor = false;
		$hasCustomGutenberg = false;
		$hasActiveBlockTheme = false;
		global $wp_version;

		$classicEditorPlugins = [
			'classic-editor/classic-editor.php',
			'disable-gutenberg/disable-gutenberg.php',
			'enable-classic-editor/enable-classic-editor.php'
		];
		$customBlockPlugins = [
			'gutenberg/gutenberg.php'
		];
		$blockThemeTags = [
			'block-patterns',
			'block-styles',
			'full-site-editing'
		];

		if ($wp_version) {
			$details[] = 'WordPress version:' . esc_html($wp_version);
		}

		if (phpversion()) {
			$details[] = 'PHP version: ' . esc_html(phpversion());
		}

		$currentTheme = wp_get_theme();
		$details[] = 'Current Theme: ' . esc_html($currentTheme['Name']). ' ' . esc_html($currentTheme['Version']);

		$currentThemeTags = $currentTheme['Tags'];

		foreach ($blockThemeTags as $block_theme_tag) {
			if (in_array($block_theme_tag, $currentThemeTags)) {
				$details[] = 'Current Theme supports ' . esc_html($block_theme_tag) . '.';
				$hasActiveBlockTheme = true;
			}
		}

		foreach ($classicEditorPlugins as $relative_plugin_path) {
			if (is_plugin_active($relative_plugin_path)) {
				$pluginEntrypoint = WP_PLUGIN_DIR . '/' . $relative_plugin_path;
				$pluginData = get_plugin_data($pluginEntrypoint);
				$details[] = 'Active classic editor plugin: ' . $pluginData['Name'] . ' ' . $pluginData['Version'];
				$hasClassicEditor = true;
			}
		}

		foreach ($customBlockPlugins as $relative_plugin_path) {
			if (is_plugin_active($relative_plugin_path)) {
				$pluginEntrypoint = WP_PLUGIN_DIR . '/' . $relative_plugin_path;
				$pluginData = get_plugin_data($pluginEntrypoint);
				$details[] = 'Active Gutenberg plugin: ' . $pluginData['Name'] . ' ' . $pluginData['Version'];
				$hasCustomGutenberg = true;
			}
		}

		if ($hasClassicEditor && $hasActiveBlockTheme) {
			$warnings[] = 'Conflict: Classic Editor vs. active block theme.';
		}

		if ($hasClassicEditor && $hasCustomGutenberg) {
			$warnings[] = 'Conflict: Classic Editor vs. Gutenberg plugin.';
		}

		if (count($warnings) > 1) {
			echo '<p class="openmindculture_wpstatus__summary openmindculture_wpstatus__summary--warning">';
			echo esc_html(count($warnings));
			echo ' issues might need your attention.</p>';
		} elseif (!empty($warnings)) {
			echo '<p class="openmindculture_wpstatus__summary openmindculture_wpstatus__summary--warning">';
			echo 'One issue might need your attention.</p>';
		} else {
			echo '<p class="openmindculture_wpstatus__summary openmindculture_wpstatus__summary--ok">';
			echo 'No critical issues detected.</p>';
		}

		/**
		 * @var string $warning
		 */
		foreach ($warnings as $warning) {
			echo '<div class="openmindculture_wpstatus__summary openmindculture_wpstatus__summary--warning">';
			echo esc_html($warning);
			echo '</div>';
		}

		echo '<ul>';
		/**
		 * @var string $detail
		 */
		foreach ($details as $detail) {
			echo '<li>' . esc_html($detail) . '</li>';
		}
		echo '</ul>';

		echo '<p>This message is generated by the <b>Incompatibility Status</b> plugin currently active on this site.';
		echo 'You can disable the plugin on the <a href="plugins.php">plugins page</a>.</p>';
	}

	add_action('wp_dashboard_setup', 'openmindculture_wpstatusDashboardWidgets' );
}
